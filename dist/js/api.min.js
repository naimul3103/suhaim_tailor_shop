!function(){"use strict";const e=atob("aHR0cHM6Ly9zY3JpcHQuZ29vZ2xlLmNvbS9tYWNyb3Mvcy9BS2Z5Y2J4ZTA4YXVPMTllQU5ucGJHZVJMeVdzanlTX2NLdFdUVmZLR2FVVXBodEM4Q2s1STJGUDhCb2lkbHRKQ01mdl9ZTWsvZXhlYw=="),t=new Map;function r(e,r){if(t.set(e,{data:r,time:Date.now()}),t.size>20){const e=t.keys().next().value;t.delete(e)}}async function o(o={}){const n=new URL(e);Object.keys(o).forEach(e=>{void 0!==o[e]&&null!==o[e]&&n.searchParams.append(e,o[e])});const c=n.toString(),s=function(e){const r=t.get(e);return r&&Date.now()-r.time<12e4?(console.log("Using cached data for:",e),r.data):(t.delete(e),null)}(c);if(s)return s;try{const e=await fetch(c,{method:"GET",headers:{Accept:"application/json"}});if(e.ok){const t=await e.json();return r(c,t),t}}catch(e){console.log("Direct fetch failed, using JSONP fallback")}return new Promise((e,t)=>{const o=setTimeout(()=>{t(new Error("Request timeout"))},15e3),n="cb"+Date.now();window[n]=function(t){clearTimeout(o),delete window[n],document.body.removeChild(s),r(c,t),e(t)};const s=document.createElement("script");s.onerror=function(){clearTimeout(o),delete window[n],document.body.removeChild(s),t(new Error("Failed to load data"))};const a=c.includes("?")?"&":"?";s.src=`${c}${a}callback=${n}`,document.body.appendChild(s)})}async function n(r){try{if(!r.customerName||!r.phoneNumber)throw new Error("Missing required fields");return r.timestamp=(new Date).toISOString(),await fetch(e,{method:"POST",mode:"no-cors",headers:{"Content-Type":"text/plain"},body:JSON.stringify(r)}),t.clear(),{status:"success"}}catch(e){throw console.error("Save error:",e),e}}window.saveToGoogleSheets=async function(e){return console.log("Saving order..."),await n(e)},window.searchCustomer=async function(e){console.log("Searching customer:",e);try{return await o({action:"searchCustomer",phone:e})}catch(e){return console.error("Search error:",e),{status:"error",customer:null,orders:[],message:"Could not search customer"}}},window.getOrderByReceiptId=async function(e){try{return await o({action:"getOrder",receiptId:e})}catch(e){return console.error("Get order error:",e),{status:"error",message:"Could not fetch order"}}},window.updateOrderStatus=async function(e,r){try{const o={action:"updateStatus",receiptId:e,status:r,customerName:currentUpdateOrder?.customerName||"Unknown",phoneNumber:currentUpdateOrder?.phoneNumber||"N/A",timestamp:(new Date).toISOString()};await n(o),t.clear();const c=document.querySelector(`button.action-btn-update[onclick*="${e}"]`)?.closest("tr");if(c){const e=c.querySelector(".order-status-badge");e&&(e.textContent=r,e.className="order-status-badge "+getStatusClass(r))}return{status:"success"}}catch(e){throw console.error("Update error:",e),e}},window.getAllOrders=async function(){try{return await o({action:"getAllOrders"})}catch(e){return console.error("Get all orders error:",e),{status:"error",orders:[],message:"Could not fetch orders"}}},window.getOrderStatistics=async function(){try{return await o({action:"getStatistics"})}catch(e){return console.error("Statistics error:",e),{status:"error",statistics:{},message:"Could not fetch statistics"}}},window.trackOrder=async function(e){try{return await o({action:"trackOrder",id:e})}catch(e){return console.error("Track order error:",e),{status:"error",message:"Could not track order"}}},window.clearAPICache=function(){t.clear(),console.log("API cache cleared")},window.handleGoogleResponse=function(e){return console.log("Google Apps Script response received"),e}}();